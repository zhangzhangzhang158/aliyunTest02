{"version":3,"file":"common.js","mappings":"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","sources":["../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/menu.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/toast.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/pages-routing-config.const.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/storeLogin/storeLogin.component.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/storeLogin/storeLogin.component.html","./node_modules/rxjs/dist/esm/internal/observable/throwError.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { childRoutes } from '../../pages/pages-routing-config.const';\r\n\r\nexport interface Menu {\r\n  path: string;\r\n  icon: string;\r\n  name: string;\r\n  selected: boolean;\r\n  subMenus: Menu[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MenuService {\r\n  public toggleMenuBar: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  private baseUrl = environment.apiUrl + '/auth';\r\n  private adminRoutes = childRoutes;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getMenus(): Observable<Menu[]> {\r\n    let url = this.baseUrl + '/current/permissions?site=AUTOAD';\r\n    if (url.startsWith('assets')) {\r\n      url = this.baseUrl + '/current-permissions.json';\r\n    }\r\n\r\n    return this.http.get<Menu[]>(url).pipe(\r\n      //tap(list => console.log('list: ' + JSON.stringify(list))),\r\n      map((list) => {\r\n        let menus: Menu[] = [];\r\n        list.forEach((item) => {\r\n          item = this.resetData(item);\r\n          menus.push(item);\r\n        });\r\n        return menus;\r\n      })\r\n    );\r\n  }\r\n\r\n  resetData(item: Menu): Menu {\r\n    this.adminRoutes.forEach((menu) => {\r\n      if (item.path != null && item.path == '/' + menu.path) {\r\n        item.icon = menu.data.icon;\r\n        item.name = menu.data.title;\r\n      }\r\n      item.selected = false;\r\n    });\r\n    return item;\r\n  }\r\n\r\n  getFeature(path: string): Observable<Menu | undefined> {\r\n    return this.getMenus().pipe(\r\n      map((featurets: Menu[]) => featurets.find((p) => p.path === path))\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Toast service class\r\n * This class provides methods to add single, multiple alerts as a toast\r\n */\r\nexport class ToastService {\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private translateService: TranslateService\r\n  ) {}\r\n\r\n  info(detail: string, sticky?: boolean, key?: string) {\r\n    this.addSingle('info', 'app.Info', detail, sticky, key);\r\n  }\r\n\r\n  success(detail: string, sticky?: boolean, key?: string) {\r\n    this.addSingle('success', 'app.Success', detail, sticky, key);\r\n  }\r\n\r\n  successrWithParmeter(\r\n    detail: string,\r\n    params: Object,\r\n    sticky?: boolean,\r\n    key?: string\r\n  ) {\r\n    this.addSingle(\r\n      'success',\r\n      'app.Success',\r\n      this.translateService.instant(detail, params),\r\n      sticky,\r\n      key\r\n    );\r\n  }\r\n\r\n  warn(detail: string, sticky?: boolean, key?: string) {\r\n    this.addSingle('warn', 'app.Warn', detail, sticky, key);\r\n  }\r\n\r\n  error(detail: string, key?: string) {\r\n    this.addSingle('error', 'app.Error', detail, true, key);\r\n  }\r\n\r\n  errorWithParmeter(\r\n    detail: string,\r\n    params: Object,\r\n    key?: string,\r\n    data?: string\r\n  ) {\r\n    this.addSingle(\r\n      'error',\r\n      'app.Error',\r\n      this.translateService.instant(detail, params),\r\n      true,\r\n      key,\r\n      data\r\n    );\r\n  }\r\n\r\n  errorWithColumnNameParmeter(\r\n    detail: string,\r\n    columnNames: string[],\r\n    key?: string,\r\n    data?: string\r\n  ) {\r\n    let parmeter: string = '';\r\n    columnNames.forEach((columnName) => {\r\n      parmeter += `,` + this.translateService.instant(columnName);\r\n    });\r\n\r\n    if (parmeter.length > 0) {\r\n      parmeter = parmeter.substring(1);\r\n    }\r\n    this.addSingle(\r\n      'error',\r\n      'app.Error',\r\n      this.translateService.instant(detail, { data: parmeter }),\r\n      true,\r\n      key,\r\n      data\r\n    );\r\n  }\r\n\r\n  /**\r\n   * add single toast message\r\n   * @param severity Severity level of the message, valid values are \"success\", \"info\", \"warn\" and \"error\"\r\n   * @param summary Summary text of the message.\r\n   * @param detail Detail text of the message.\r\n   * @param sticky Whether the message should be automatically closed based on life property or kept visible.\r\n   * @param key Key of the message in case message is targeted to a specific toast component.\r\n   */\r\n  addSingle(\r\n    severity: string,\r\n    summary: string,\r\n    detail: string,\r\n    sticky?: boolean,\r\n    key?: string,\r\n    data?: string\r\n  ) {\r\n    this.messageService.add({\r\n      severity: severity,\r\n      summary: summary,\r\n      detail: detail,\r\n      sticky: sticky,\r\n      key: key,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * add multiple toast messages\r\n   * @param messages\r\n   * array of message type {severity:'success', summary:'Service Message', detail:'Via MessageService'}\r\n   */\r\n  addMultiple(messages: any) {\r\n    this.messageService.addAll(messages);\r\n  }\r\n\r\n  /**\r\n   * clear all toast messages\r\n   */\r\n  clear() {\r\n    this.messageService.clear();\r\n  }\r\n}\r\n","export const childRoutes = [\r\n  {\r\n    path: 'welcome',\r\n    loadChildren: () =>\r\n      import('./welcome/welcome.module').then((m) => m.WelcomeModule),\r\n    data: { icon: 'pi-home', title: 'welcome.title' },\r\n  },\r\n];\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { MenuService } from 'src/app/core/services/menu.service';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\nexport interface Auth {\r\n  token: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-storeLogin',\r\n  templateUrl: './storeLogin.component.html',\r\n  styleUrls: ['./storeLogin.component.scss'],\r\n})\r\nexport class StoreLoginComponent implements OnInit, AfterViewInit {\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loginService: LoginService,\r\n    private menuService: MenuService,\r\n    private _msalService: MsalService\r\n  ) {}\r\n\r\n  accessToken: string = '';\r\n  ngOnInit(): void {\r\n    this.activatedRoute.queryParams.subscribe((params: any) => {\r\n      console.log(params);\r\n      this.accessToken = params.accessToken;\r\n      console.log('ngOnInit accessToken', this.accessToken);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.accessToken == '' || !this.accessToken) {\r\n      this.router.navigate(['redirect']);\r\n    }\r\n    this.loginService.storeLogin(this.accessToken).subscribe({\r\n      next: (storeLoginData) => {\r\n        let email: string | null = '';\r\n        if (storeLoginData) {\r\n          email = localStorage.getItem('storeLoginEmail') || '';\r\n          this.loginService.logout();\r\n          this.loginService.loginAad(email).subscribe({\r\n            next: (loginAadSuccess) => {\r\n              console.log('storeLogin> loginAad token', loginAadSuccess);\r\n              if (loginAadSuccess) {\r\n                console.log('storeLogin> loginAad success');\r\n                this.loginService.profile().subscribe({\r\n                  next: (profileSuccess) => {\r\n                    if (profileSuccess) {\r\n                      console.log('storeLogin> profile success');\r\n                      const location = localStorage.getItem('location');\r\n                      localStorage.removeItem('location');\r\n                      console.log('localStorage location : ' + location);\r\n                      console.log('!!location : ' + !!location);\r\n                      if (!!location) {\r\n                        this.menuService.getMenus().subscribe({\r\n                          next: (menus) => {\r\n                            localStorage.setItem(\r\n                              'menus',\r\n                              JSON.stringify(menus)\r\n                            );\r\n                          },\r\n                          complete: () => {\r\n                            this.router.navigateByUrl(location);\r\n                          },\r\n                        });\r\n                      } else {\r\n                        this.router.navigate(['/']);\r\n                      }\r\n                    }\r\n                  },\r\n                });\r\n              } else {\r\n                console.log('storeLogin> loginAad fail');\r\n              }\r\n            },\r\n            error: (e) => {\r\n              console.log('storeLogin> loginAad error', e);\r\n              this.router.navigate(['/redirect']);\r\n            },\r\n          });\r\n        } else {\r\n          this.router.navigate(['redirect']);\r\n        }\r\n      },\r\n      error: (e) => {\r\n        console.log('storeLogin> storeLogin error', e);\r\n        this.router.navigate(['redirect']);\r\n      },\r\n    });\r\n  }\r\n}\r\n","<p>storeLogin works!</p>\r\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n    const init = (subscriber) => subscriber.error(errorFactory());\n    return new Observable(scheduler ? (subscriber) => scheduler.schedule(init, 0, subscriber) : init);\n}\n"],"names":["throwError","BehaviorSubject","map","environment","childRoutes","MenuService","http","apiUrl","url","baseUrl","startsWith","get","pipe","list","menus","forEach","item","resetData","push","adminRoutes","menu","path","icon","data","name","title","selected","getMenus","featurets","find","p","err","errorMessage","error","ErrorEvent","message","status","console","i0","factory","providedIn","ToastService","messageService","translateService","detail","sticky","key","addSingle","params","instant","columnNames","parmeter","columnName","length","substring","severity","summary","add","messages","addAll","clear","loadChildren","then","m","WelcomeModule","StoreLoginComponent","router","activatedRoute","loginService","menuService","_msalService","queryParams","subscribe","log","accessToken","navigate","storeLogin","next","storeLoginData","email","localStorage","getItem","logout","loginAad","loginAadSuccess","profile","profileSuccess","location","removeItem","setItem","JSON","stringify","complete","navigateByUrl","e","selectors","decls","vars","template","Observable","isFunction","errorOrErrorFactory","scheduler","errorFactory","init","subscriber","schedule"],"sourceRoot":"webpack:///"}