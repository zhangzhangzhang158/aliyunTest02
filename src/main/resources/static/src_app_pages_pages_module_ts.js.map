{"version":3,"file":"src_app_pages_pages_module_ts.js","mappings":"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","sources":["../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/application-state.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/basic.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/layout/layout.component.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/layout/layout.component.html","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/layout/side-nav/side-nav.component.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/layout/side-nav/side-nav.component.html","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/layout/top-nav/top-nav.component.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/layout/top-nav/top-nav.component.html","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/pages-routing.module.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/pages.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * application state service\r\n */\r\nexport class ApplicationStateService {\r\n\r\n  private isMobileResolution: boolean;\r\n\r\n  constructor() {\r\n    if (window.innerWidth <= 992) {\r\n      this.isMobileResolution = true;\r\n    } else {\r\n      this.isMobileResolution = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get is mobile resolution or desktop.\r\n   * need to refresh after changing website resolution\r\n   */\r\n  public getIsMobileResolution(): boolean {\r\n    return this.isMobileResolution;\r\n  }\r\n}","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoaderService } from 'src/app/core/services/loader.service';\r\nimport { childRoutes } from '../../pages/pages-routing-config.const';\r\nimport { environment } from 'src/environments/environment';\r\nexport interface Page {\r\n  totalPages: number;\r\n  totalElements: number;\r\n  size: number;\r\n  number: number;\r\n  numberOfElements: number;\r\n  last: boolean;\r\n  first: boolean;\r\n  empty: boolean;\r\n}\r\nexport interface PageData {\r\n  page: Page;\r\n  content: any[];\r\n}\r\n@Injectable()\r\nexport class BasicService {\r\n  @Output() loading: EventEmitter<boolean> = new EventEmitter();\r\n  private baseUrl = environment.apiUrl;\r\n  constructor(\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private loginService: LoginService,\r\n    private loaderService: LoaderService\r\n  ) {}\r\n\r\n  emitLoading(show: boolean) {\r\n    this.loading.emit(show);\r\n  }\r\n\r\n  getMenuName(url: string) {\r\n    let title = '';\r\n    childRoutes.forEach((item) => {\r\n      if (url == '/') {\r\n        title = 'Welcome';\r\n      } else if (url == '/401') {\r\n        title = '';\r\n      } else if (\r\n        url == '/' + item.path ||\r\n        url.startsWith('/' + item.path + '/')\r\n      ) {\r\n        title = item.data.title;\r\n      }\r\n    });\r\n    return title;\r\n  }\r\n\r\n  getI18n(i18n: string) {\r\n    return this.translate.instant(i18n);\r\n  }\r\n\r\n  showTotalRecords(records: number) {\r\n    const message = this.translate.instant('messages.total-records', {\r\n      records,\r\n    });\r\n    this.showMessage(message);\r\n  }\r\n\r\n  showNoDataFound() {\r\n    const message = this.getI18n('messages.no-data-found');\r\n    this.showMessage(message);\r\n  }\r\n\r\n  showErrorMessageByKey(key: string) {\r\n    let message = this.translate.instant(key);\r\n    this.showError(message);\r\n  }\r\n\r\n  showError(error: any) {\r\n    this.loaderService.hide();\r\n    //403\r\n    if (error.status == 403) {\r\n      this.loginService.logout();\r\n      this.router.navigate(['/redirect']);\r\n    } else if (error.status == 401) {\r\n      this.router.navigate(['/401']);\r\n    }\r\n  }\r\n\r\n  showMessage(message: string) {\r\n    console.log(message);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\nimport { Router, NavigationStart, RouterEvent } from '@angular/router';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n// Service\r\nimport { BasicService } from '../../core/services/basic.service';\r\nimport { MenuService } from 'src/app/core/services/menu.service';\r\nimport { ApplicationStateService } from 'src/app/core/services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutComponent implements OnInit, OnDestroy {\r\n  isMenuVisible: boolean = false;\r\n  showLoading = false;\r\n  sideNavOpened: boolean = false;\r\n  sideNavMode: 'side' | 'over' = 'side';\r\n  toolBarHeight = 64;\r\n  private readonly mediaWatcher: Subscription;\r\n  title = '';\r\n  filename = '';\r\n  navStart: Observable<NavigationStart> = new Observable<NavigationStart>();\r\n  constructor(\r\n    media: MediaObserver,\r\n    private readonly basicService: BasicService,\r\n    private menuService: MenuService,\r\n    private applicationStateService: ApplicationStateService,\r\n    private router: Router\r\n  ) {\r\n    // Create a new Observable that publishes only the NavigationStart event\r\n    router.events\r\n      .pipe(filter((evt) => evt instanceof RouterEvent))\r\n      .subscribe((evt: any) => {\r\n        this.title = this.basicService.getMenuName(evt.url);\r\n      });\r\n\r\n    this.mediaWatcher = media\r\n      .asObservable()\r\n      .pipe(\r\n        filter((changes: MediaChange[]) => changes.length > 0),\r\n        map((changes: MediaChange[]) => changes[0])\r\n      )\r\n      .subscribe((change: MediaChange) => {\r\n        if (change.mqAlias === 'sm' || change.mqAlias === 'xs') {\r\n          if (this.sideNavOpened) {\r\n            this.sideNavOpened = false;\r\n          }\r\n          this.sideNavMode = 'over';\r\n        } else {\r\n          this.sideNavOpened = true;\r\n          this.sideNavMode = 'side';\r\n        }\r\n        if (change.mqAlias === 'xs') {\r\n          this.toolBarHeight = 56;\r\n        } else {\r\n          this.toolBarHeight = 64;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    let that = this;\r\n    this.menuService.toggleMenuBar.subscribe(function (data: any) {\r\n      if (data && data != null) {\r\n        that.isMenuVisible = !that.isMenuVisible;\r\n      }\r\n    });\r\n\r\n    if (this.applicationStateService.getIsMobileResolution()) {\r\n      this.isMenuVisible = false;\r\n    } else {\r\n      this.isMenuVisible = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.menuService.toggleMenuBar.observers.forEach(function (element) {\r\n      element.complete();\r\n    });\r\n  }\r\n}\r\n","<div class=\"layout-container\">\r\n    <app-top-nav (sideNavToggled)=\"snav.toggleMenu()\"></app-top-nav>\r\n    <div class=\"ng-content\" [ngClass]=\"{'hidden-menu-content': !isMenuVisible}\">\r\n        <ng-container class=\"sidenav-container\">\r\n            <app-side-nav #snav [isMenuVisible]=\"isMenuVisible\"></app-side-nav>\r\n        </ng-container>\r\n        <main class=\"main-container\">\r\n            <h2>{{ title|translate }}</h2>\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// Service\r\nimport { Menu, MenuService } from 'src/app/core/services/menu.service';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { ToastService } from 'src/app/core/services/toast.service';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n} from '@angular/animations';\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.scss'],\r\n  animations: [\r\n    trigger('submenu', [\r\n      state(\r\n        'hidden',\r\n        style({\r\n          height: '0',\r\n          overflow: 'hidden',\r\n        })\r\n      ),\r\n      state(\r\n        'visible',\r\n        style({\r\n          height: '*',\r\n        })\r\n      ),\r\n      transition('visible <=> hidden', [\r\n        style({ overflow: 'hidden' }),\r\n        animate('{{transitionParams}}'),\r\n      ]),\r\n      transition('void => *', animate(0)),\r\n    ]),\r\n  ],\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n  @Input() isMenuVisible: boolean = false;\r\n  menus: Menu[] = [];\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private menuService: MenuService,\r\n    private loginService: LoginService,\r\n    private toastService: ToastService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const url = this.router.routerState.snapshot.url;\r\n    console.log(url);\r\n    this.menuService.getMenus().subscribe({\r\n      next: (menus) => {\r\n        this.menus = menus;\r\n        localStorage.setItem('menus', JSON.stringify(menus));\r\n        if (menus == null || menus.length == 0) {\r\n          this.toastService.error('message.no-role-permission');\r\n          this.loginService.logout();\r\n        }\r\n        if (!this.loginService.checkPermission(url)) {\r\n          this.toastService.error('message.no-function-permission');\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.log('sideNav>getMenus()', error);\r\n        this.toastService.error('message.no-function-permission');\r\n        this.loginService.logout();\r\n        this.router.navigate(['/redirect']);\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.menuService.toggleMenuBar.next(true);\r\n  }\r\n}\r\n","<p-sidebar\r\n  [visible]=\"isMenuVisible\"\r\n  position=\"left\"\r\n  [showCloseIcon]=\"false\"\r\n  styleClass=\"np-menubar\"\r\n  [modal]=\"false\"\r\n>\r\n  <ul class=\"np-menu\">\r\n    <ng-template #recursiveList let-list>\r\n      <ng-container *ngFor=\"let menu of list\">\r\n        <li style=\"list-style-type: none\">\r\n          <a\r\n            (click)=\"menu.selected = !menu.selected\"\r\n            [routerLinkActive]=\"'active'\"\r\n            [routerLink]=\"[menu.path]\"\r\n          >\r\n            <em class=\"fa fa-fw pi\" [ngClass]=\"menu.icon\"></em>\r\n            {{ menu.name | translate }}\r\n            <em\r\n              class=\"fa right pi\"\r\n              *ngIf=\"menu.subMenus != null\"\r\n              [ngClass]=\"{\r\n                'pi-angle-down': !menu.selected,\r\n                'pi-angle-up': menu.selected\r\n              }\"\r\n            ></em>\r\n          </a>\r\n          <ul\r\n            class=\"np-sub-menu\"\r\n            [@submenu]=\"\r\n              menu.subMenus && menu.subMenus.length > 0 && menu.selected\r\n                ? {\r\n                    value: 'visible',\r\n                    params: {\r\n                      transitionParams: '400ms cubic-bezier(0.86, 0, 0.07, 1)',\r\n                      height: '*'\r\n                    }\r\n                  }\r\n                : {\r\n                    value: 'hidden',\r\n                    params: {\r\n                      transitionParams: '400ms cubic-bezier(0.86, 0, 0.07, 1)',\r\n                      height: '0'\r\n                    }\r\n                  }\r\n            \"\r\n          >\r\n            <ng-container\r\n              *ngTemplateOutlet=\"\r\n                recursiveList;\r\n                context: { $implicit: menu.subMenus }\r\n              \"\r\n            >\r\n            </ng-container>\r\n          </ul>\r\n        </li>\r\n      </ng-container>\r\n    </ng-template>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"recursiveList; context: { $implicit: menus }\"\r\n    ></ng-container>\r\n  </ul>\r\n</p-sidebar>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { LanguageService } from 'src/app/core/services/language.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\n@Component({\r\n  selector: 'app-top-nav',\r\n  templateUrl: './top-nav.component.html',\r\n  styleUrls: ['./top-nav.component.scss'],\r\n})\r\nexport class TopNavComponent implements OnInit {\r\n  @Output() sideNavToggled = new EventEmitter<void>();\r\n  userinfo: any;\r\n\r\n  constructor(\r\n    // private dialog: MatDialog,\r\n    private loginService: LoginService,\r\n    private languageService: LanguageService,\r\n    private readonly router: Router,\r\n    // private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer,\r\n    private msalService: MsalService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userinfo = this.loginService.getUser();\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.sideNavToggled.emit();\r\n  }\r\n\r\n  onLoggedout() {\r\n    this.loginService.logout();\r\n    this.msalService.logout();\r\n  }\r\n\r\n  get languageList() {\r\n    return this.languageService.languageList;\r\n  }\r\n\r\n  get currentLanguage() {\r\n    return this.languageService.translate.currentLang;\r\n  }\r\n\r\n  useLanguage(language: string) {\r\n    this.languageService.setLang(language);\r\n  }\r\n\r\n  openDialog(): void {\r\n    if (!this.loginService.isLoggedIn()) {\r\n      this.router.navigate(['/redirect']);\r\n    }\r\n  }\r\n}\r\n","<p-toolbar class=\"ng-header\">\r\n  <div class=\"p-toolbar-group-left\">\r\n  <p-button icon=\"pi pi-bars\" iconPos=\"left\" styleClass=\"p-button-rounded\" (click)=\"toggleSidebar()\"></p-button>\r\n  </div>\r\n  <span class=\"p-toolbar-group-center\">\r\n    <!-- {{'app.title'|translate}} -->BPaaS\r\n  </span>\r\n  <div class=\"p-toolbar-group-right\">\r\n    <div pTooltip=\"{{userinfo.tenant}}/{{userinfo.username}}\" style=\"display:inline-block;\" tooltipPosition=\"bottom\">\r\n      <p-button icon=\"pi pi-user\" styleClass=\"p-button-rounded\"></p-button>\r\n    </div>\r\n    <div pTooltip=\"{{'app.i18n.language' | translate: {language: 'app.i18n.languageList.' + currentLanguage | translate} }}\" style=\"display:inline-block;\" tooltipPosition=\"bottom\">\r\n      <p-button icon=\"pi pi-globe\" styleClass=\"p-button-rounded\" (click)=\"themeChooser.toggle($event)\"></p-button>\r\n    </div>\r\n    <div pTooltip=\"{{'login.actions.logout'|translate}}\" style=\"display:inline-block;\" tooltipPosition=\"bottom\">\r\n      <p-button icon=\"pi pi-sign-out\" styleClass=\"p-button-rounded\" (click)=\"onLoggedout()\"></p-button>\r\n    </div>\r\n</div>\r\n</p-toolbar>\r\n\r\n<p-overlayPanel #themeChooser>\r\n  <div>\r\n    <button pButton type=\"button\" (click)=\"useLanguage('zh-tw')\">繁</button>\r\n    <button pButton type=\"button\" (click)=\"useLanguage('en')\" style=\"background-color: #427976;\">En</button>\r\n</div>\r\n</p-overlayPanel>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Component\r\nimport { LayoutComponent } from './layout/layout.component';\r\n// Const\r\nimport { childRoutes } from './pages-routing-config.const';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'welcome',\r\n        pathMatch: 'full'\r\n      },\r\n      ...childRoutes\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PagesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// Module\r\nimport { NgPrimeModule } from '../app.ngprime.module';\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\n// Component\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { TopNavComponent } from './layout/top-nav/top-nav.component';\r\nimport { SideNavComponent } from './layout/side-nav/side-nav.component';\r\n// Service\r\nimport { BasicService } from '../core/services/basic.service';\r\nimport { StoreLoginComponent } from './storeLogin/storeLogin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    TopNavComponent,\r\n    SideNavComponent,\r\n    StoreLoginComponent,\r\n  ],\r\n  imports: [CommonModule, PagesRoutingModule, NgPrimeModule],\r\n  entryComponents: [],\r\n  providers: [BasicService],\r\n})\r\nexport class PagesModule {}\r\n"],"names":["ApplicationStateService","window","innerWidth","isMobileResolution","factory","providedIn","EventEmitter","childRoutes","environment","BasicService","router","translate","loginService","loaderService","apiUrl","show","loading","emit","url","title","forEach","item","path","startsWith","data","i18n","instant","records","message","showMessage","getI18n","key","showError","error","hide","status","logout","navigate","console","log","i0","RouterEvent","Observable","filter","map","LayoutComponent","media","basicService","menuService","applicationStateService","events","pipe","evt","subscribe","getMenuName","mediaWatcher","asObservable","changes","length","change","mqAlias","sideNavOpened","sideNavMode","toolBarHeight","that","toggleMenuBar","isMenuVisible","getIsMobileResolution","observers","element","complete","selectors","decls","vars","consts","template","_r0","trigger","state","style","transition","animate","SideNavComponent","toastService","routerState","snapshot","getMenus","next","menus","localStorage","setItem","JSON","stringify","checkPermission","inputs","height","overflow","TopNavComponent","languageService","domSanitizer","msalService","userinfo","getUser","sideNavToggled","languageList","currentLang","language","setLang","isLoggedIn","outputs","ctx","RouterModule","routes","component","children","redirectTo","pathMatch","PagesRoutingModule","forChild","imports","exports","CommonModule","NgPrimeModule","StoreLoginComponent","PagesModule","declarations"],"sourceRoot":"webpack:///"}