{"version":3,"file":"main.js","mappings":"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","sources":["../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/app-routing.module.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/app.common.module.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/app.component.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/app.component.html","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/app.module.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/app.ngprime.module.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/guards/auth.guard.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/interceptor/jwt.interceptor.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/language.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/loader.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/core/services/login.service.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/environments/environment.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/core/guards/auth.guard';\nimport { MsalGuard } from '@azure/msal-angular';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./pages/pages.module').then((m) => m.PagesModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('src/app/pages/login/login.module').then((m) => m.LoginModule),\n  },\n  {\n    path: 'redirect',\n    loadChildren: () =>\n      import('src/app/pages/redirect/redirect.module').then(\n        (m) => m.RedirectModule\n      ),\n    canActivate: [MsalGuard],\n  },\n  {\n    path: 'storeLogin',\n    loadChildren: () =>\n      import('src/app/pages/storeLogin/storeLogin.module').then(\n        (m) => m.StoreLoginModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgPrimeModule } from 'src/app/app.ngprime.module';\r\nimport { MessageService } from 'primeng/api';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n@NgModule({\r\n    imports: [\r\n\r\n    ],\r\n    exports: [\r\n        NgPrimeModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [\r\n        DatePipe,\r\n        MessageService,\r\n    ],\r\n    declarations: [\r\n    ]\r\n})\r\nexport class AppCommonModule {\r\n\r\n}\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { LoaderService } from 'src/app/core/services/loader.service';\nimport { LanguageService } from './core/services/language.service';\nimport {\n  MsalService,\n  MsalBroadcastService,\n  MSAL_GUARD_CONFIG,\n  MsalGuardConfiguration,\n} from '@azure/msal-angular';\nimport {\n  AuthenticationResult,\n  InteractionStatus,\n  InteractionType,\n  PopupRequest,\n  RedirectRequest,\n} from '@azure/msal-browser';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'BPaaS';\n  showLoader: boolean = false;\n  isIframe = false;\n  loginDisplay = false;\n  private readonly _destroying$ = new Subject<void>();\n\n  constructor(\n    private loaderService: LoaderService,\n    private languageService: LanguageService,\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\n    private authService: MsalService,\n    private msalBroadcastService: MsalBroadcastService\n  ) {\n    this.languageService.setInitState();\n  }\n\n  ngOnInit() {\n    this.loaderService.status.subscribe((val: boolean) => {\n      this.showLoader = val;\n    });\n    this.isIframe = window !== window.parent && !window.opener;\n\n    this.msalBroadcastService.inProgress$\n      .pipe(\n        filter(\n          (status: InteractionStatus) => status === InteractionStatus.None\n        ),\n        takeUntil(this._destroying$)\n      )\n      .subscribe(() => {\n        this.setLoginDisplay();\n      });\n  }\n\n  setLoginDisplay() {\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\n  }\n\n  login() {\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\n      if (this.msalGuardConfig.authRequest) {\n        this.authService\n          .loginPopup({ ...this.msalGuardConfig.authRequest } as PopupRequest)\n          .subscribe((response: AuthenticationResult) => {\n            this.authService.instance.setActiveAccount(response.account);\n          });\n      } else {\n        this.authService\n          .loginPopup()\n          .subscribe((response: AuthenticationResult) => {\n            this.authService.instance.setActiveAccount(response.account);\n          });\n      }\n    } else {\n      if (this.msalGuardConfig.authRequest) {\n        this.authService.loginRedirect({\n          ...this.msalGuardConfig.authRequest,\n        } as RedirectRequest);\n      } else {\n        this.authService.loginRedirect();\n      }\n    }\n  }\n\n  logout() {\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\n      this.authService.logoutPopup({\n        postLogoutRedirectUri: '/',\n        mainWindowRedirectUri: '/',\n      });\n    } else {\n      this.authService.logoutRedirect({\n        postLogoutRedirectUri: '/',\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroying$.next();\n    this._destroying$.complete();\n    this.loaderService.status.observers.forEach(function (element) {\n      element.complete();\n    });\n  }\n}\n","<div class=\"ui-fluid ng-main\">\n  <p-toast position=\"bottom-right\">\n    <ng-template let-message pTemplate=\"message\">\n      <span\n        class=\"ui-toast-icon pi\"\n        [ngClass]=\"{\n          'pi-info-circle': message.severity == 'info',\n          'pi-exclamation-triangle': message.severity == 'warn',\n          'pi-times-circle': message.severity == 'error',\n          'pi-check': message.severity == 'success'\n        }\"\n      ></span>\n      <div class=\"ui-toast-message-text-content\">\n        <div class=\"ui-toast-summary\">{{ message.summary | translate }}</div>\n        <div class=\"ui-toast-detail\">{{ message.detail | translate }}</div>\n      </div>\n    </ng-template>\n  </p-toast>\n  <div [class.hidden]=\"!showLoader\" class=\"np-loader\">\n    <p-progressSpinner strokeWidth=\"5\"></p-progressSpinner>\n  </div>\n  <!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\n  <router-outlet *ngIf=\"!isIframe\"></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppCommonModule } from 'src/app/app.common.module';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { environment } from 'src/environments/environment';\nimport { JwtInterceptor } from 'src/app/core/interceptor/jwt.interceptor';\nimport {\n  IPublicClientApplication,\n  PublicClientApplication,\n  InteractionType,\n  LogLevel,\n} from '@azure/msal-browser';\nimport {\n  MsalGuard,\n  MsalInterceptor,\n  MsalBroadcastService,\n  MsalInterceptorConfiguration,\n  MsalModule,\n  MsalService,\n  MSAL_GUARD_CONFIG,\n  MSAL_INSTANCE,\n  MSAL_INTERCEPTOR_CONFIG,\n  MsalGuardConfiguration,\n  MsalRedirectComponent,\n} from '@azure/msal-angular';\n\nconst isIE =\n  window.navigator.userAgent.indexOf('MSIE ') > -1 ||\n  window.navigator.userAgent.indexOf('Trident/') > -1;\n\nexport function loggerCallback(logLevel: LogLevel, message: string) {\n  console.log(message);\n}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  console.log('MSALInstanceFactory');\n  return new PublicClientApplication({\n    auth: {\n      clientId: environment.clientId,\n      authority: environment.authority,\n      redirectUri: environment.redirectUrl,\n    },\n    cache: {\n      //cacheLocation: BrowserCacheLocation.LocalStorage, //若要一直Keep登入的狀態請取消remark, 但無法與其它系統同步\n      storeAuthStateInCookie: isIE, // set to true for IE 11\n    },\n    system: {\n      loggerOptions: {\n        loggerCallback,\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n      },\n    },\n  });\n}\n\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\n  console.log('MSALInterceptorConfigFactory');\n  const protectedResourceMap = new Map<string, Array<string>>();\n  protectedResourceMap.set('https://graph.microsoft.com/graph/v1.0/me', [\n    'user.read',\n  ]);\n\n  return {\n    interactionType: InteractionType.Redirect,\n    protectedResourceMap,\n  };\n}\n\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\n  console.log('MSALGuardConfigFactory');\n  return {\n    interactionType: InteractionType.Redirect,\n    authRequest: {\n      scopes: ['user.read'],\n    },\n  };\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppCommonModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    MsalModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: MsalInterceptor, multi: true },\n    { provide: MSAL_INSTANCE, useFactory: MSALInstanceFactory },\n    { provide: MSAL_GUARD_CONFIG, useFactory: MSALGuardConfigFactory },\n    {\n      provide: MSAL_INTERCEPTOR_CONFIG,\n      useFactory: MSALInterceptorConfigFactory,\n    },\n    MsalService,\n    MsalGuard,\n    MsalBroadcastService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent, MsalRedirectComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MegaMenuModule } from 'primeng/megamenu';\r\nimport { TableModule } from 'primeng/table';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { BlockUIModule } from 'primeng/blockui';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { ChipsModule } from 'primeng/chips';\r\nimport { DataViewModule } from 'primeng/dataview';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { TagModule } from 'primeng/tag';\r\nimport {ToggleButtonModule} from 'primeng/togglebutton';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport { RippleModule } from 'primeng/ripple';\r\n\r\n@NgModule({\r\n  exports: [\r\n    TranslateModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    PanelModule,\r\n    ToastModule,\r\n    MegaMenuModule,\r\n    TableModule,\r\n    MessageModule,\r\n    CardModule,\r\n    ChartModule,\r\n    ProgressSpinnerModule,\r\n    OverlayPanelModule,\r\n    BreadcrumbModule,\r\n    CalendarModule,\r\n    SidebarModule,\r\n    DynamicDialogModule,\r\n    InputTextareaModule,\r\n    MessagesModule,\r\n    FileUploadModule,\r\n    DropdownModule,\r\n    AccordionModule,\r\n    StepsModule,\r\n    RadioButtonModule,\r\n    BlockUIModule,\r\n    ListboxModule,\r\n    ChipsModule,\r\n    DataViewModule,\r\n    TabViewModule,\r\n    ConfirmDialogModule,\r\n    CheckboxModule,\r\n    TooltipModule,\r\n    ToolbarModule,\r\n    SelectButtonModule,\r\n    DialogModule,\r\n    DividerModule,\r\n    AutoCompleteModule,\r\n    TagModule,\r\n    ToggleButtonModule,\r\n    InputNumberModule,\r\n    RippleModule\r\n  ]\r\n})\r\nexport class NgPrimeModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  CanActivateChild,\r\n  UrlTree,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/login.service';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private authService: MsalService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.loginService.isLoggedIn()) {\r\n      console.log('Can Activate : ' + state.url);\r\n      return true;\r\n    }\r\n    console.log('Cannot Activate : ' + state.url);\r\n    localStorage.setItem('location', state.url);\r\n    this.router.navigate(['/redirect']);\r\n    return false;\r\n  }\r\n\r\n  canActivateChild(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): true | UrlTree {\r\n    if (this.loginService.checkPermission(state.url)) {\r\n      console.log('Can ActivateChild : ' + state.url);\r\n      return true;\r\n    } else {\r\n      console.log('Cannot ActivateChild : ' + state.url);\r\n      return this.router.createUrlTree(['/401']);\r\n    }\r\n  }\r\n\r\n  getAadLoginStatus() {\r\n    return this.authService.instance.getAllAccounts().length > 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private loginService: LoginService, private router: Router) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    //console.log('JwtInterceptor intercept');\r\n    // add authorization header with jwt token if available\r\n    let token = this.loginService.getAccessToken();\r\n\r\n    if (token) {\r\n      request = request.clone({\r\n        headers: request.headers\r\n          .set('Cache-Control', 'no-cache')\r\n          .set('Pragma', 'no-cache')\r\n          .set('Expires', 'Sat, 01 Jan 2000 00:00:00 GMT')\r\n          .set('If-Modified-Since', '0')\r\n          .set('Authorization', `Bearer ${token}`),\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LanguageService {\r\n  language$ = new ReplaySubject<LangChangeEvent>(1);\r\n  translate = this.translateService;\r\n  languageList = ['en', 'zh-tw'];\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  setInitState() {\r\n    this.translateService.addLangs(this.languageList);\r\n    this.translateService.setDefaultLang('zh-tw');\r\n\r\n    // 以使用者手動語言設定為主，以瀏覽器語言設定為輔\r\n    // 如果是中文就顯示中文，否則都顯示英文\r\n    // 繁體/簡體中文代碼都是zh\r\n    let lang = localStorage.getItem('lang');\r\n    if (lang) {\r\n      lang = lang.match('zh-tw') ? 'zh-tw' : 'en';\r\n    } else {\r\n      lang = this.translate.getBrowserLang().includes('zh-tw') ? 'zh-tw' : 'en';\r\n    }\r\n    this.setLang(lang);\r\n  }\r\n\r\n  setLang(lang: string) {\r\n    this.translateService.onLangChange.pipe(take(1)).subscribe((result) => {\r\n      this.language$.next(result);\r\n    });\r\n    this.translateService.use(lang);\r\n    localStorage.setItem('lang', lang);\r\n  }\r\n\r\n  getLang(): string {\r\n    let lang = localStorage.getItem('lang');\r\n    return lang ? lang : 'en';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n/**\r\n * loader service\r\n * toggle loader gif in website\r\n */\r\nexport class LoaderService {\r\n    public status: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    show() {\r\n        this.status.next(true);\r\n    }\r\n\r\n    hide() {\r\n        this.status.next(false);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nexport interface StoreLoginResponse {\r\n  code: string;\r\n  message: string;\r\n  email: string;\r\n  serviceName: string;\r\n  permissionName: string;\r\n}\r\n\r\nexport interface Auth {\r\n  token: string;\r\n}\r\n\r\nexport interface User {\r\n  username: string;\r\n  email: string;\r\n  maxRoleLevel: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  private baseUrl = environment.apiUrl; \r\n  //private baseUrl = environment.apiUrl + '/auth';\r\n  constructor(private http: HttpClient) {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': 'Content-Type, Content-Length, Authorization, Accept, X-Requested-With , yourHeaderFeild',\r\n      'Content-type': 'multipart/form-data'\r\n\r\n    })\r\n  }\r\n\r\n  login(\r\n    tenant: string,\r\n    username: string,\r\n    password: string\r\n  ): Observable<boolean> {\r\n    let url = this.baseUrl + '/api/onlogin?username='+username+'&password='+password;\r\n    let ob: Observable<Auth>;\r\n    if (environment.production || !url.startsWith('assets')) {\r\n      let body = { tenant: tenant, username: username, password: password };\r\n      ob = this.http.get<Auth>(url);\r\n    } else {\r\n      ob = this.http.get<Auth>(url);\r\n    }\r\n\r\n    return ob.pipe(\r\n      first(),\r\n      map((auth) => {\r\n        debugger\r\n        // login successful if there's a jwt token in the response\r\n        if (auth) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n         // localStorage.setItem('token', auth.token);\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  loginAad(email: string): Observable<boolean> {\r\n    let url = this.baseUrl + '/loginAad';\r\n    let ob: Observable<Auth>;\r\n    if (environment.production || !url.startsWith('assets')) {\r\n      let body = { email: email };\r\n      ob = this.http.post<Auth>(url, body);\r\n    } else {\r\n      ob = this.http.get<Auth>(url);\r\n    }\r\n\r\n    return ob.pipe(\r\n      first(),\r\n      map((auth) => {\r\n        // login successful if there's a jwt token in the response\r\n        if (auth && auth.token) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('token', auth.token);\r\n\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  profile(): Observable<boolean> {\r\n    let url = this.baseUrl + '/current';\r\n    let ob = this.http.get<User>(url);\r\n\r\n    return ob.pipe(\r\n      map((user) => {\r\n        // login successful if there's a jwt token in the response\r\n        if (user && user.username) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('menus');\r\n  }\r\n\r\n  getUser(): User {\r\n    // IE localStorage 不同步，需要手動setItem來調用更新值\r\n    localStorage.setItem('test', 'getUser');\r\n\r\n    let user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : '';\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.getUser() !== null;\r\n  }\r\n\r\n  getAccessToken(): string {\r\n    // IE localStorage 不同步，需要手動setItem來調用更新值\r\n    localStorage.setItem('test', 'getAccessToken');\r\n    let token = localStorage.getItem('token');\r\n    return token ? token : '';\r\n  }\r\n\r\n  checkPermission(url: string): boolean {\r\n    // IE localStorage 不同步，需要手動setItem來調用更新值\r\n    localStorage.setItem('test', url);\r\n    const localMenus = localStorage.getItem('menus');\r\n    console.log(url);\r\n\r\n    if ('/welcome' === url || '/401' === url) {\r\n      return true;\r\n    } else if (localMenus != null && url != null) {\r\n      let menus = JSON.parse(localMenus);\r\n      let isOK = false;\r\n      menus.filter((menu: any) => {\r\n        if (url == menu.path || url.startsWith(menu.path + '/')) {\r\n          isOK = true;\r\n        } else if (menu.subMenus != null) {\r\n          menu.subMenus.filter((subMenu: any) => {\r\n            if (url == subMenu.path || url.startsWith(subMenu.path + '/')) {\r\n              isOK = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      console.log('isOK:' + isOK);\r\n      if (isOK) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  storeLogin(accessToken: string): Observable<boolean> {\r\n    let encodeToken = encodeURIComponent(accessToken);\r\n    let url = environment.bpaasStoreUrl + `?token=${encodeToken}`;\r\n    console.log('storeLogin url', url);\r\n    let headers = new HttpHeaders({\r\n      'Ocp-Apim-Subscription-Key': environment.apimKey,\r\n      clientId: environment.storeLoginClientId,\r\n      clientSecret: environment.storeLoginClientSecret,\r\n    });\r\n    let options = {\r\n      headers,\r\n    };\r\n    return this.http.get<StoreLoginResponse>(url, options).pipe(\r\n      map((result) => {\r\n        console.log('~~~~~~~~~storeLogin:' + JSON.stringify(result));\r\n        if (result.email != '' && result.email.indexOf('@') >= 0) {\r\n          localStorage.setItem('storeLoginEmail', result.email);\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n}\r\n","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200',\n  rmaUrl: 'assets/api/v1/rma',\n  mailUrl: 'assets/api/v1/mail',\n  templateUrl: 'assets/api/v1/template',\n  commonUrl: 'assets/api/v1/common',\n  clientId: 'ebeb07ee-fb80-42d7-9833-72ec14b925fc',\n  authority:\n    'https://login.microsoftonline.com/de047c79-d4d9-4af3-91de-bc44b0581490/',\n  redirectUrl: 'http://localhost:4200',\n  apimKey: 'c14a795723764f469c86a0f1ebf7ed1c',\n  bpaasStoreUrl:\n    'https://itu7-apim.azure-api.net/dev-store-api/v1/service/v1/auth/verifyAccessToken',\n  storeLoginClientId: 'f03473ec-b675-4343-ae75-f6bb4e74ef9c',\n  storeLoginClientSecret: 'hygz+ZOliB8uRzr0bfh5wnC3sSw5Wckq45Yb3oYjcJE',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","AuthGuard","MsalGuard","routes","path","loadChildren","then","m","PagesModule","canActivate","LoginModule","RedirectModule","StoreLoginModule","AppRoutingModule","forRoot","imports","exports","DatePipe","NgPrimeModule","MessageService","FormsModule","ReactiveFormsModule","AppCommonModule","MSAL_GUARD_CONFIG","InteractionStatus","InteractionType","Subject","filter","takeUntil","i0","AppComponent","loaderService","languageService","msalGuardConfig","authService","msalBroadcastService","setInitState","status","subscribe","val","showLoader","isIframe","window","parent","opener","inProgress$","pipe","None","_destroying$","setLoginDisplay","loginDisplay","instance","getAllAccounts","length","interactionType","Popup","authRequest","loginPopup","Object","response","setActiveAccount","account","loginRedirect","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","next","complete","observers","forEach","element","selectors","decls","vars","consts","template","BrowserModule","CommonModule","BrowserAnimationsModule","HttpClientModule","HttpClient","HTTP_INTERCEPTORS","TranslateModule","TranslateLoader","TranslateHttpLoader","environment","JwtInterceptor","PublicClientApplication","LogLevel","MsalInterceptor","MsalBroadcastService","MsalModule","MsalService","MSAL_INSTANCE","MSAL_INTERCEPTOR_CONFIG","MsalRedirectComponent","isIE","navigator","userAgent","indexOf","loggerCallback","logLevel","message","console","log","HttpLoaderFactory","http","MSALInstanceFactory","auth","clientId","authority","redirectUri","redirectUrl","cache","storeAuthStateInCookie","system","loggerOptions","Info","piiLoggingEnabled","MSALInterceptorConfigFactory","protectedResourceMap","Map","set","Redirect","MSALGuardConfigFactory","scopes","AppModule","bootstrap","provide","useClass","multi","useFactory","loader","deps","declarations","i1","InputTextModule","ButtonModule","PanelModule","ToastModule","MegaMenuModule","TableModule","MessageModule","CardModule","ChartModule","ProgressSpinnerModule","OverlayPanelModule","BreadcrumbModule","CalendarModule","SidebarModule","DynamicDialogModule","InputTextareaModule","MessagesModule","FileUploadModule","DropdownModule","AccordionModule","StepsModule","RadioButtonModule","BlockUIModule","ListboxModule","ChipsModule","DataViewModule","TabViewModule","ConfirmDialogModule","CheckboxModule","TooltipModule","ToolbarModule","SelectButtonModule","DialogModule","DividerModule","AutoCompleteModule","TagModule","ToggleButtonModule","InputNumberModule","RippleModule","loginService","router","state","isLoggedIn","url","localStorage","setItem","navigate","route","checkPermission","createUrlTree","factory","providedIn","request","token","getAccessToken","clone","headers","handle","ReplaySubject","take","LanguageService","translateService","addLangs","languageList","setDefaultLang","lang","getItem","match","translate","getBrowserLang","includes","setLang","onLangChange","result","language$","use","BehaviorSubject","LoaderService","HttpHeaders","map","first","LoginService","apiUrl","tenant","username","password","baseUrl","ob","production","startsWith","body","get","email","post","user","JSON","stringify","removeItem","parse","getUser","localMenus","menus","isOK","menu","subMenus","subMenu","accessToken","encodeToken","encodeURIComponent","bpaasStoreUrl","apimKey","storeLoginClientId","clientSecret","storeLoginClientSecret","options","rmaUrl","mailUrl","templateUrl","commonUrl","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","error","err"],"sourceRoot":"webpack:///"}