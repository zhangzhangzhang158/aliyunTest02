{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/login/login.component.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/login/login.component.html","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/login/login.module.ts","../../teams%E6%96%87%E4%BB%B6%E8%B5%84%E6%96%99/rma-web/src/app/pages/login/login.routing.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from 'src/app/core/services/login.service';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls: ['login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  production = environment.production;\r\n  form: FormGroup = this.fb.group({\r\n    tenant: ['', Validators.required],\r\n    username: ['', Validators.required],\r\n    password: ['', Validators.required],\r\n  });\r\n\r\n  locale: string = '';\r\n\r\n  version: string = '';\r\n\r\n  msgs: any[] = [];\r\n  error: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private fb: FormBuilder,\r\n    public translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onLogin(form: FormGroup) {\r\n    if (form.invalid) return;\r\n\r\n    this.loginService.logout();\r\n    this.loginService\r\n      .login(form.value.tenant, form.value.username, form.value.password)\r\n      .subscribe({\r\n        next: (success) => {\r\n          debugger\r\n          if (success) {\r\n            console.log('login success');\r\n            this.router.navigate(['/welcome']);\r\n            // this.loginService.profile().subscribe({\r\n            //   next: (success2) => {\r\n            //     if (success2) {\r\n            //       console.log('profile success2');\r\n            //       this.router.navigate(['/welcome']);\r\n            //     }\r\n            //   },\r\n            // });\r\n          } else {\r\n            console.log('login fail');\r\n            this.error = 'login.messages.403';\r\n          }\r\n        },\r\n        error: (e) => {\r\n          console.log(e);\r\n          if (e.status == 403) this.error = 'login.messages.403';\r\n          else this.error = e.error.message;\r\n        },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 語言下拉選單 Change 事件\r\n   * @param $event 事件\r\n   */\r\n  onLanguageChange($event: any) {\r\n    this.translateService.use(this.locale);\r\n  }\r\n}\r\n","<div class=\"login-page\">\r\n  <div class=\"content px20\">\r\n    <form class=\"login-form\" [formGroup]=\"form\">\r\n      <div class=\"text-center\">\r\n        <h2 class=\"app-name\">{{ \"app.title\" | translate }}</h2>\r\n      </div>\r\n      <div fxLayout=\"row\">\r\n        <div fxFlexFill class=\"p-fluid\">\r\n          <input\r\n            pInputText\r\n            formControlName=\"tenant\"\r\n            type=\"text\"\r\n            placeholder=\"{{ 'login.tenant' | translate }}\"\r\n            required\r\n            (input)=\"error = ''\"\r\n          />\r\n          <input\r\n            pInputText\r\n            formControlName=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"{{ 'login.username' | translate }}\"\r\n            required\r\n            (input)=\"error = ''\"\r\n          />\r\n          <input\r\n            pInputText\r\n            formControlName=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"{{ 'login.password' | translate }}\"\r\n            required\r\n            (input)=\"error = ''\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"space-between\"\r\n        fxLayout.xs=\"column\"\r\n        class=\"space-between\"\r\n        style=\"display: none\"\r\n      >\r\n        <a href=\"javascript:void(0)\" style=\"display: none\">{{\r\n          \"login.forgot\" | translate\r\n        }}</a>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\">\r\n        <div fxFlexFill>\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            label=\"{{ 'login.actions.login' | translate }}\"\r\n            (click)=\"onLogin(form)\"\r\n            [disabled]=\"!form.valid\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" *ngIf=\"error\">\r\n        <div fxFlexFill class=\"text-center\">\r\n          <em class=\"pi pi-exclamation-triangle\" style=\"color: red\">{{\r\n            error | translate\r\n          }}</em>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LoginComponent } from 'src/app/pages/login/login.component';\r\nimport { LoginRoutingModule } from 'src/app/pages/login/login.routing';\r\nimport { AppCommonModule } from 'src/app/app.common.module';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    LoginRoutingModule,\r\n    AppCommonModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      },\r\n      isolate: false\r\n    })\r\n  ],\r\n  declarations: [LoginComponent],\r\n  exports: [TranslateModule]\r\n})\r\nexport class LoginModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from 'src/app/pages/login/login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n"],"names":["environment","Validators","i0","LoginComponent","router","loginService","fb","translateService","production","group","tenant","required","username","password","form","invalid","logout","login","value","subscribe","next","success","console","log","navigate","error","e","status","message","$event","use","locale","selectors","decls","vars","consts","template","ctx","CommonModule","FlexLayoutModule","LoginRoutingModule","AppCommonModule","TranslateModule","TranslateLoader","HttpClient","TranslateHttpLoader","HttpLoaderFactory","http","LoginModule","forChild","loader","provide","useFactory","deps","isolate","declarations","imports","i1","exports","RouterModule","routes","path","component"],"sourceRoot":"webpack:///"}